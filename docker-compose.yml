version: "3.8"
services:
  mongodb:
    image : mongo:latest
    container_name: mongodb
    hostname: my_mongo
    environment:
     - MONGO_INITDB_ROOT_USERNAME=root
     - MONGO_INITDB_ROOT_PASSWORD=example

    networks:
      - dans_network
    ports:
      - "27017:27017"
    depends_on:
      - rabbitmq
    restart: unless-stopped
  





  rabbitmq:
    image: rabbitmq:3-management
    hostname: my_rabbit
    volumes:
      - ./rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      #Note that these two local folders need to be ignored in Git.
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./rabbitmq/logs:/var/log/rabbitmq/log
    ports:
      - 5673:5672
      - 15672:15672
    restart: unless-stopped
    networks:
      - dans_network







  minIO:
    image:  minio/minio
    container_name  : minIO
    hostname: my_minio
    environment: 
      - "MINIO_ROOT_USER=joe"
      - "MINIO_ROOT_PASSWORD=mamamama"
    ports: 
      - "9000:9000"
    volumes:
      - /home/dev/mdata:/data
    depends_on:
      - rabbitmq
    command: server /data
    networks:
      - dans_network
    restart: unless-stopped
  




  controller:
   build: './controller_service'
   container_name: controller
  #  command: sh -c "/wait /controller.py"
   depends_on:
      - rabbitmq
      - mongodb
   environment:
     - WAIT_HOSTS=my_mongo:27017,my_rabbit:5672 
     - RMQ_HOST=my_rabbit
     - MONGO_INITDB_ROOT_USERNAME=root
     - MONGO_INITDB_ROOT_PASSWORD=example
     - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongodb:27017/
     - DB_NAME=DB
     - QUEUE_NAMES=updates,results,pdfs,setup_ready
     - WAIT_BEFORE=15
   restart: on-failure
  #  stdin_open: true # docker run -i
  #  tty: true        # docker run -t
  #  restart: unless-stopped
   networks:
    - dans_network





  report_generator:
    # stdin_open: true
    # tty: true
    build: './report_generator_service'
    depends_on:
      - mongodb
      - rabbitmq
    container_name: report_generator
    # only for displaying the pdf in the filesystem delete when done with dev
    volumes:
      - /home/dan/report_generator_service:/app/pdfs
    environment:
     - WAIT_HOSTS=my_mongo:27017,my_rabbit:5672
     - RMQ_HOST=my_rabbit
     - MONGO_INITDB_ROOT_USERNAME=root
     - MONGO_INITDB_ROOT_PASSWORD=example
     - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongodb:27017/
     - DB_NAME=DB
     - QUEUE_NAMES=pdfs
     - "MINIO_ROOT_USER=joe"
     - "MINIO_ROOT_PASSWORD=mamamama"
    restart: on-failure
    networks:
      - dans_network







  insert_db:
    build: './insert_db'
    environment:        
     - WAIT_HOSTS=my_mongo:27017
     - MONGO_INITDB_ROOT_USERNAME=root
     - MONGO_INITDB_ROOT_PASSWORD=example
     - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongodb:27017/
     - DB_NAME=DB
    networks:
      - dans_network
    container_name: insert_db
    




  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - rabbitmq
      - mongodb
    networks: 
      - dans_network
    environment:
     - ME_CONFIG_MONGODB_ADMINUSERNAME=root
     - ME_CONFIG_MONGODB_ADMINPASSWORD=example
     - ME_CONFIG_MONGODB_URL=mongodb://root:example@my_mongo:27017/






networks:
  dans_network:
    driver: bridge